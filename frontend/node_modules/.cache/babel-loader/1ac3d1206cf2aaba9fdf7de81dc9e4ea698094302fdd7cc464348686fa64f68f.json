{"ast":null,"code":"var _jsxFileName = \"/home/charles/landguard-app/landguard_hackathon/frontend/src/ParcelCreate.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ParcelCreate() {\n  _s();\n  const [form, setForm] = useState({\n    name: '',\n    description: '',\n    country: '',\n    areaHectares: 0,\n    geojson: null\n  });\n  const [geoText, setGeoText] = useState('');\n  const submit = async e => {\n    e.preventDefault();\n    try {\n      // parse geojson if provided\n      let geo = null;\n      if (geoText) {\n        geo = JSON.parse(geoText);\n      } else {\n        alert('For this demo please paste a GeoJSON Polygon in the box (or use the map-draw in future).');\n        return;\n      }\n      const token = localStorage.getItem('lg_token');\n      const res = await axios.post('http://localhost:5000/api/parcels', {\n        ...form,\n        geojson: geo\n      }, {\n        headers: {\n          Authorization: 'Bearer ' + token\n        }\n      });\n      toast.success('Parcel created and analysis triggered');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      toast.error(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Error');\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: {\n        maxWidth: 800,\n        margin: '0 auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Parcel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Parcel Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: form.name,\n          onChange: e => setForm({\n            ...form,\n            name: e.target.value\n          }),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: form.description,\n          onChange: e => setForm({\n            ...form,\n            description: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: form.country,\n          onChange: e => setForm({\n            ...form,\n            country: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Area (hectares)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: form.areaHectares,\n          onChange: e => setForm({\n            ...form,\n            areaHectares: Number(e.target.value)\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"GeoJSON (Polygon) - paste here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: geoText,\n          onChange: e => setGeoText(e.target.value),\n          placeholder: \"{\\\"type\\\":\\\"Feature\\\",\\\"geometry\\\":{...}}\",\n          style: {\n            height: 160\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: 12\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            type: \"submit\",\n            children: \"Create Parcel & Analyze\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(ParcelCreate, \"DQh87Dv5xlUPmq5DzmjJymIeNqY=\");\n_c = ParcelCreate;\nvar _c;\n$RefreshReg$(_c, \"ParcelCreate\");","map":{"version":3,"names":["React","useState","axios","toast","jsxDEV","_jsxDEV","ParcelCreate","_s","form","setForm","name","description","country","areaHectares","geojson","geoText","setGeoText","submit","e","preventDefault","geo","JSON","parse","alert","token","localStorage","getItem","res","post","headers","Authorization","success","err","_err$response","_err$response$data","error","response","data","message","console","className","children","style","maxWidth","margin","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","required","type","Number","placeholder","height","marginTop","_c","$RefreshReg$"],"sources":["/home/charles/landguard-app/landguard_hackathon/frontend/src/ParcelCreate.js"],"sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\nexport default function ParcelCreate(){\n  const [form, setForm] = useState({ name:'', description:'', country:'', areaHectares:0, geojson: null });\n  const [geoText, setGeoText] = useState('');\n\n  const submit = async e => {\n    e.preventDefault();\n    try{\n      // parse geojson if provided\n      let geo = null;\n      if (geoText) {\n        geo = JSON.parse(geoText);\n      } else {\n        alert('For this demo please paste a GeoJSON Polygon in the box (or use the map-draw in future).');\n        return;\n      }\n      const token = localStorage.getItem('lg_token');\n      const res = await axios.post('http://localhost:5000/api/parcels', { ...form, geojson: geo }, { headers: { Authorization: 'Bearer '+token } });\n      toast.success('Parcel created and analysis triggered');\n    }catch(err){ toast.error(err.response?.data?.message || 'Error'); console.error(err); }\n  };\n\n  return (\n    <div className='container'>\n      <div className='card' style={{maxWidth:800, margin:'0 auto'}}>\n        <h2>Add Parcel</h2>\n        <form onSubmit={submit}>\n          <label>Parcel Name</label>\n          <input value={form.name} onChange={e=>setForm({...form, name:e.target.value})} required />\n          <label>Description</label>\n          <textarea value={form.description} onChange={e=>setForm({...form, description:e.target.value})} />\n          <label>Country</label>\n          <input value={form.country} onChange={e=>setForm({...form, country:e.target.value})} />\n          <label>Area (hectares)</label>\n          <input type='number' value={form.areaHectares} onChange={e=>setForm({...form, areaHectares: Number(e.target.value)})} />\n          <label>GeoJSON (Polygon) - paste here</label>\n          <textarea value={geoText} onChange={e=>setGeoText(e.target.value)} placeholder='{\"type\":\"Feature\",\"geometry\":{...}}' style={{height:160}} />\n          <div style={{marginTop:12}}><button className='btn' type='submit'>Create Parcel & Analyze</button></div>\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}